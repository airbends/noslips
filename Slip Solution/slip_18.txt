
/*  1.Create a C++ class Student with data members Roll_no, S_Name, Class, Percentage. Accept two students information and display 
information of student having maximum percentage. (Use this pointer)[15 Marks]         */

#include <iostream.h>
#include <conio.h>
#include <string.h>

class Student {
private:
    int Roll_no;
    char S_Name[30], Class[10];
    float Percentage;

public:
    void acceptInfo() {
        cout << "\nEnter Roll No: ";
        cin >> Roll_no;
        cout << "Enter Name: ";
        cin >> S_Name;
        cout << "Enter Class: ";
        cin >> Class;
        cout << "Enter Percentage: ";
        cin >> Percentage;
    }

    void displayInfo() {
        cout << "\n--- Student Details ---";
        cout << "\nRoll No: " << Roll_no;
        cout << "\nName: " << S_Name;
        cout << "\nClass: " << Class;
        cout << "\nPercentage: " << Percentage << "%\n";
    }

    Student* Larger(Student* s) {
        return (this->Percentage > s->Percentage) ? this : s;
    }
};

void main() {
    clrscr();
    
    Student s1, s2, *topper;

    s1.acceptInfo();
    s2.acceptInfo();

    topper = s1.Larger(&s2);

    cout << "\nStudent with Maximum Percentage:";
    topper->displayInfo();

    getch();
}


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/*2.Create a C++ class MyArray with data members
					- int *arr
					â€“ int size
Write necessary member functions to accept and display Array elements. Overload the following operators: operator example purpose
operator       Example         purpose
-(Unary)	   -A1 			   Reverse Array elements
+(Binary) 	   A2=A1+n 		   Add constant a to all array elements     */

#include <iostream.h>
#include <conio.h>

class MyArray {
private:
    int *arr;
    int size;

public:
    MyArray(int s) {
        size = s;
        arr = new int[size];
    }
    
    ~MyArray() {
        delete[] arr;
    }
    
    void accept() {
        cout << "Enter elements: ";
        for (int i = 0; i < size; i++) {
            cin >> arr[i];
        }
    }
    
    void display() {
        for (int i = 0; i < size; i++) {
            cout << arr[i] << " ";
        }
        cout << endl;
    }
    
    MyArray operator-() {
        MyArray temp(size);
        for (int i = 0; i < size; i++) {
            temp.arr[i] = arr[size - 1 - i];
        }
        return temp;
    }
    
    MyArray operator+(int n) {
        MyArray temp(size);
        for (int i = 0; i < size; i++) {
            temp.arr[i] = arr[i] + n;
        }
        return temp;
    }
};

int main() {
    clrscr();
    int n;
    cout << "Enter size: ";
    cin >> n;
    
    MyArray A1(n);
    A1.accept();
    cout << "Original: ";
    A1.display();
    
    MyArray A2 = -A1;
    cout << "Reversed: ";
    A2.display();
    
    int addValue;
    cout << "Enter value to add: ";
    cin >> addValue;
    MyArray A3 = A1 + addValue;
    cout << "After adding: ";
    A3.display();
    
    getch();
    return 0;
}

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/*           */












--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/*           */
